trigger: 
# runs on push based
 branches:
   include:
     - main
     - feature

     
# runs on pull based
# pr:
#  branches:
#    include:
#      - main
#      - feature

# agent pool name
pool: poc

variables:
  directory:  

stages:
  - stage:
    displayName: 
    jobs:
      - job: 
        steps:
        - task: TerraformInstaller@1
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
            backendServiceArm: 'azurerm-service-connection'
            backendAzureRmStorageAccountName: 'stgbackend25'
            backendAzureRmContainerName: 'backendcont'
            backendAzureRmKey: 'dev-terraform.tfstate'
        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'plan'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
            environmentServiceNameAzureRM: 'azurerm-service-connection'
        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'apply'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
            environmentServiceNameAzureRM: 'azurerm-service-connection'

        - task: SSH@0
          inputs:
            sshEndpoint: 'ssh-service-connection'
            runOptions: 'inline'
            inline: |
              sudo apt get update 
              sudo apt install nginx -y
              sudo systemctl start nginx
              sudo chmod -R 755 /var/www/html
            readyTimeout: '20000'

        - task: CopyFilesOverSSH@0
          inputs:
            sshEndpoint: 'ssh-service-connection'
            sourceFolder: '$(System.DefaultWorkingDirectory)/src'
            contents: '**'
            targetFolder: '/var/www/html'
            readyTimeout: '20000'