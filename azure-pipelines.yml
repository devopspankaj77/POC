# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
 branches: 
  include:
    - main

   

pool: poc

stages:
  - stage: 
    displayName: 
    jobs:
      - job: 
        displayName: 
        steps:
        - task: TerraformInstaller@1
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
            backendServiceArm: 'azurerm-service-connection'
            backendAzureRmStorageAccountName: 'stgbackend25'
            backendAzureRmContainerName: 'backendcont'
            backendAzureRmKey: 'terraform.tfstate'
      - job: 
        displayName: PlanandApply
        steps:
        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'plan'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
            environmentServiceNameAzureRM: 'azurerm-service-connection'
        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'apply'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
            environmentServiceNameAzureRM: 'azurerm-service-connection'
        
        

